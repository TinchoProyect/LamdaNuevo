[1mdiff --git a/src/utils/generarPDF.ts b/src/utils/generarPDF.ts[m
[1mindex f68aca1..e9a8965 100644[m
[1m--- a/src/utils/generarPDF.ts[m
[1m+++ b/src/utils/generarPDF.ts[m
[36m@@ -24,45 +24,6 @@[m [mfunction hexToRgb(hex: string): [number, number, number] {[m
       ? [parseInt(match[1], 16), parseInt(match[2], 16), parseInt(match[3], 16)][m
       : [0, 0, 0]; // Color negro por defecto si el formato es incorrecto.[m
 }[m
[31m-/**[m
[31m- * Encuentra el √∫ltimo movimiento con saldo parcial en 0 y obtiene su fecha.[m
[31m- * @param movimientos - Lista de movimientos.[m
[31m- * @returns Fecha del √∫ltimo saldo en 0 o `null` si no hay.[m
[31m- */[m
[31m-function encontrarUltimoSaldoCero(movimientos: Movimiento[]): Date | undefined {[m
[31m-  for (let i = movimientos.length - 1; i >= 0; i--) {[m
[31m-      const fecha = movimientos[i].fecha ?? ""; // Si es null, asignar cadena vac√≠a[m
[31m-      if (movimientos[i].saldo_parcial === 0 && fecha.trim() !== "") {[m
[31m-          const fechaValida = Date.parse(fecha);[m
[31m-          if (!isNaN(fechaValida)) {[m
[31m-              return new Date(fechaValida); // Convertimos solo si es una fecha v√°lida[m
[31m-          }[m
[31m-      }[m
[31m-  }[m
[31m-  return undefined; // Si no hay saldo 0, devuelve `undefined`[m
[31m-}[m
[31m-[m
[31m-function encontrarUltimaFechaSaldoCero(movimientos: Movimiento[]): Date | undefined {[m
[31m-  // Ordenamos los movimientos por fecha descendente (de m√°s reciente a m√°s antiguo)[m
[31m-  const movimientosOrdenados = [...movimientos].sort((a, b) => {[m
[31m-      const fechaA = a.fecha ? new Date(a.fecha).getTime() : 0;[m
[31m-      const fechaB = b.fecha ? new Date(b.fecha).getTime() : 0;[m
[31m-      return fechaB - fechaA; // Orden descendente[m
[31m-  });[m
[31m-[m
[31m-  // Buscamos el primer saldo 0 en este orden[m
[31m-  for (const mov of movimientosOrdenados) {[m
[31m-      const fecha = mov.fecha ?? ""; // Si es null, asignar cadena vac√≠a[m
[31m-      if (mov.saldo_parcial === 0 && fecha.trim() !== "") {[m
[31m-          const fechaValida = Date.parse(fecha);[m
[31m-          if (!isNaN(fechaValida)) {[m
[31m-              return new Date(fechaValida); // Retorna la √∫ltima fecha encontrada[m
[31m-          }[m
[31m-      }[m
[31m-  }[m
[31m-[m
[31m-  return undefined; // Si no hay saldo 0, devuelve `undefined`[m
[31m-}[m
 [m
 function ajustarValor(valor: number): string {[m
   if (Math.abs(valor) <= 0.99) {[m
[36m@@ -234,16 +195,7 @@[m [mexport function generarInformePDF(params: GenerarInformePDFParams) {[m
     (pdf as any).lastAutoTable ? (pdf as any).lastAutoTable.finalY + 8 : currentY[m
   );[m
 [m
[31m-  // ENCONTRAR EL √öLTIMO SALDO PARCIAL EN 0[m
[31m-  const ultimoSaldoCeroIndex = encontrarUltimoSaldoCero(movimientosFiltrados);[m
[31m-  console.log(`üîç √öltimo saldo parcial en 0 encontrado en √≠ndice: ${ultimoSaldoCeroIndex}`);[m
[31m- /* const fechaUltimoSaldoCero = encontrarUltimoSaldoCero(movimientosFiltrados);[m
[31m-  console.log(`üîç √öltimo saldo parcial en 0 encontrado en fecha: ${fechaUltimoSaldoCero}`);*/[m
[31m-  [m
[31m-  const fechaUltimoSaldoCero = encontrarUltimaFechaSaldoCero(movimientosFiltrados);[m
[31m-  console.log(`üîç √öltima fecha con saldo parcial 0: ${fechaUltimoSaldoCero}`);[m
[31m-  [m
[31m-  [m
[32m+[m[41m [m
   [m
    [m
    // **C√°lculo de Facturas Involucradas en el An√°lisis de Saldo**[m
